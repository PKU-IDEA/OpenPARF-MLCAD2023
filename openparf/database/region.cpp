/*
 * @file          : region.cpp
 * @project       : database
 * @author        : Jing Mai <jingmai@pku.edu.cn>
 * @created date  : July 04 2023, 20:31:08, Tuesday
 * @brief         :
 * -----
 * Last Modified: July 17 2023, 11:18:35, Monday
 * Modified By: Jing Mai <jingmai@pku.edu.cn>
 * -----
 * @history :
 * ====================================================================================
 * Date         	By     	(version)	Comments
 * -------------	-------	---------	--------------------------------------------------
 * ====================================================================================
 * Copyright (c) 2020 - 2023 All Right Reserved, PKU-IDEA Group
 * -----
 * This header is generated by VSCode extension psi-header.
 */

#include "database/region.h"

OPENPARF_BEGIN_NAMESPACE

namespace database {

void Region::copy(Region const &rhs) {
  BaseType::copy(rhs);
  name_     = rhs.name_;
  bbox_     = rhs.bbox_;
  inst_ids_ = rhs.inst_ids_;
}

void Region::move(Region &&rhs) noexcept {
  BaseType::move(std::move(rhs));
  name_     = std::move(rhs.name_);
  bbox_     = std::move(rhs.bbox_);
  inst_ids_ = std::move(rhs.inst_ids_);
}

std::ostream &operator<<(std::ostream &os, Region const &rhs) {
  os << "Region " << rhs.id() << " " << rhs.name() << " " << rhs.bbox() << " " << rhs.instIds();
  return os;
}

void RegionConstraint::copy(RegionConstraint const &rhs) {
  BaseType::copy(rhs);
  region_list_       = rhs.region_list_;
  inst_id2region_id_ = rhs.inst_id2region_id_;
}

void RegionConstraint::move(RegionConstraint &&rhs) noexcept {
  BaseType::move(std::move(rhs));
  region_list_       = std::move(rhs.region_list_);
  inst_id2region_id_ = std::move(rhs.inst_id2region_id_);
}

std::ostream &operator<<(std::ostream &os, RegionConstraint const &rhs) {
  os << "RegionConstraint " << rhs.id() << " " << rhs.region_list_;
  return os;
}

}   // namespace database

OPENPARF_END_NAMESPACE
