/*
 * @file          : legality_macro_check.cpp
 * @project       : src
 * @author        : Jing Mai <jingmai@pku.edu.cn>
 * @created date  : July 13 2023, 21:59:27, Thursday
 * @brief         :
 * -----
 * Last Modified: July 17 2023, 23:10:27, Monday
 * Modified By: Jing Mai <jingmai@pku.edu.cn>
 * -----
 * @history :
 * ====================================================================================
 * Date         	By     	(version)	Comments
 * -------------	-------	---------	--------------------------------------------------
 * ====================================================================================
 * Copyright (c) 2020 - 2023 All Right Reserved, PKU-IDEA Group
 * -----
 * This header is generated by VSCode extension psi-header.
 */

#include "legality_macro_check.hpp"

#include "database/placedb.h"
#include "util/torch.h"
#include "util/util.h"

OPENPARF_BEGIN_NAMESPACE

bool legalityCheckForward(database::PlaceDB const& placedb,
        at::Tensor                                 inst_check_ids,
        bool                                       check_z_flag,
        bool                                       check_region_flag,
        bool                                       check_shape_flag,
        at::Tensor                                 pos) {
  CHECK_FLAT_CPU(inst_check_ids);
  CHECK_CONTIGUOUS(inst_check_ids);
  CHECK_TYPE(inst_check_ids, torch::kInt32);
  CHECK_FLAT_CPU(pos);
  CHECK_DIVISIBLE(pos, 3);
  CHECK_CONTIGUOUS(pos);

  bool legal = false;
  OPENPARF_DISPATCH_FLOATING_TYPES(pos, "LegalityCheckLauncher", [&] {
    legal = legalityMacroCheck<scalar_t>(placedb, OPENPARF_TENSOR_DATA_PTR(inst_check_ids, int32_t),
            inst_check_ids.numel(), check_z_flag, check_region_flag, check_shape_flag,
            OPENPARF_TENSOR_DATA_PTR(pos, scalar_t));
  });

  return legal;
}

OPENPARF_END_NAMESPACE

PYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {
  m.def("forward", &OPENPARF_NAMESPACE::legalityCheckForward, "Legality check forward");
}
